openapi: '3.0.3'

info:
  title: 'BadministAPI'
  description: 'BadministアプリのAPI'
  version: '1.0.0'

servers:
  - url: 'http://localhost:8080'
    description: 'ローカル環境'

tags:
  - name: 'auth'
    description: '認証'
  - name: 'users'
    description: 'ユーザーの操作'
  - name: 'communities'
    description: 'コミュニティの操作'

components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  requestBodies:
    temporaryRegistration:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/temporaryRegistrationRequestBody'
    activateUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/activateUserRequestBody'
    login:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/loginRequestBody'
    createCommunity:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createCommunityRequestBody'
    renameCommunity:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/renameCommunityRequestBody'
    editCommunityDescription:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/editCommunityDescriptionRequestBody'
    deleteCommunity:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteCommunityRequestBody'
    addPlayer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/addPlayerRequestBody'
    removePlayer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/removePlayerRequestBody'
    changePlayerProperty:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/changePlayerPropertyRequestBody'
    resetPlayerNumGames:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/resetPlayerNumGamesRequestBody'
    changePlayerNumGames:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/changePlayerNumGamesRequestBody'
    addMember:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/addMemberRequestBody'
    removeMember:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/removeMemberRequestBody'
    changeMemberRole:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/changeMemberRoleRequestBody'
  parameters:
    community-id:
      name: community-id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/communityId'
    user-id:
      name: user-id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/userId'
    num-court:
      name: num-court
      in: query
      schema:
        type: integer
    rule:
      name: rule
      in: query
      schema:
        $ref: '#/components/schemas/rule'
  responses:
    success:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/success'
  schemas:
    temporaryRegistrationRequestBody:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/userName'
        email:
          $ref: '#/components/schemas/userEmail'
        password:
          $ref: '#/components/schemas/userPassword'
      required:
        - name
        - email
        - password
    activateUserRequestBody:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/userEmail'
        confirm_pass:
          $ref: '#/components/schemas/userConfirmPass'
      required:
        - email
        - confirm_pass
    loginRequestBody:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/userEmail'
        password:
          $ref: '#/components/schemas/userPassword'
      required:
        - email
        - password
    createCommunityRequestBody:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/communityName'
        description:
          $ref: '#/components/schemas/communityDescription'
      required:
        - name
    renameCommunityRequestBody:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    editCommunityDescriptionRequestBody:
      type: object
      properties:
        community_id:
          $ref: '#/components/schemas/communityId'
        description:
          type: string
      required:
        - community_id
        - description
    deleteCommunityRequestBody:
      type: object
      properties:
        community_id:
          $ref: '#/components/schemas/communityId'
      required:
        - community_id
    addPlayerRequestBody:
      type: object
      properties:
        community_id:
          $ref: '#/components/schemas/communityId'
        name:
          $ref: '#/components/schemas/playerName'
        gender:
          $ref: '#/components/schemas/playerGender'
        age:
          $ref: '#/components/schemas/playerAge'
        level:
          $ref: '#/components/schemas/playerLevel'
        num_games:
          $ref: '#/components/schemas/playerNumGames'
        status:
          $ref: '#/components/schemas/playerStatus'
      required:
        - community_id
        - name
        - gender
        - age
        - level
        - num_games
        - status
    removePlayerRequestBody:
      type: object
      properties:
        community_id:
          $ref: '#/components/schemas/communityId'
        player_id:
          $ref: '#/components/schemas/playerId'
      required:
        - community_id
        - player_id
    changePlayerPropertyRequestBody:
      type: object
      properties:
        community_id:
          $ref: '#/components/schemas/communityId'
        player_id:
          $ref: '#/components/schemas/playerId'
        name:
          $ref: '#/components/schemas/playerName'
        gender:
          $ref: '#/components/schemas/playerGender'
        age:
          $ref: '#/components/schemas/playerAge'
        level:
          $ref: '#/components/schemas/playerLevel'
        num_games:
          $ref: '#/components/schemas/playerNumGames'
        status:
          $ref: '#/components/schemas/playerStatus'
      required:
        - community_id
        - player_id
        - name
        - gender
        - age
        - level
        - num_games
        - status
    resetPlayerNumGamesRequestBody:
      type: object
      properties:
        community_id:
          $ref: '#/components/schemas/communityId'
        player_id:
          $ref: '#/components/schemas/playerId'
      required:
        - community_id
        - player_id
    changePlayerNumGamesRequestBody:
      type: object
      properties:
        community_id:
          $ref: '#/components/schemas/communityId'
        player_id:
          $ref: '#/components/schemas/playerId'
        num_games:
          $ref: '#/components/schemas/playerNumGames'
      required:
        - community_id
        - player_id
        - num_games
    addMemberRequestBody:
      type: object
      properties:
        community_id:
          $ref: '#/components/schemas/communityId'
        user_id:
          $ref: '#/components/schemas/userId'
        role:
          $ref: '#/components/schemas/role'
      required:
        - community_id
        - user_id
        - role
    removeMemberRequestBody:
      type: object
      properties:
        community_id:
          $ref: '#/components/schemas/communityId'
        user_id:
          $ref: '#/components/schemas/userId'
      required:
        - community_id
        - user_id
    changeMemberRoleRequestBody:
      type: object
      properties:
        community_id:
          $ref: '#/components/schemas/communityId'
        user_id:
          $ref: '#/components/schemas/userId'
        role:
          $ref: '#/components/schemas/role'
      required:
        - community_id
        - user_id
        - role
    userReadModel:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/userId'
        name:
          $ref: '#/components/schemas/userName'
        email:
          $ref: '#/components/schemas/userEmail'
        status:
          $ref: '#/components/schemas/userStatus'
      required:
        - id
        - name
        - email
        - status
    playerReadModel:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/playerId'
        name:
          $ref: '#/components/schemas/playerName'
        gender:
          $ref: '#/components/schemas/playerGender'
        age:
          $ref: '#/components/schemas/playerAge'
        level:
          $ref: '#/components/schemas/playerLevel'
        num_games:
          $ref: '#/components/schemas/playerNumGames'
        status:
          $ref: '#/components/schemas/playerStatus'
        created_at:
          $ref: '#/components/schemas/createdAt'
        updated_at:
          $ref: '#/components/schemas/updatedAt'
      required:
        - id
        - name
        - gender
        - age
        - level
        - num_games
        - status
        - created_at
        - updated_at
    memberReadModel:
      type: object
      properties:
        member_id:
          $ref: '#/components/schemas/memberId'
        user:
          $ref: '#/components/schemas/userReadModel'
        role:
          $ref: '#/components/schemas/role'
      required:
        - member_id
        - user
        - role
    communityReadModel:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/communityId'
        name:
          $ref: '#/components/schemas/communityName'
        description:
          $ref: '#/components/schemas/communityDescription'
        created_at:
          $ref: '#/components/schemas/createdAt'
        updated_at:
          $ref: '#/components/schemas/updatedAt'
      required:
        - id
        - name
        - description
        - created_at
        - updated_at
    team:
      type: object
      properties:
        players:
          type: array
          items:
            $ref: '#/components/schemas/playerReadModel'
      required:
        - players
    match:
      type: object
      properties:
        left:
          $ref: '#/components/schemas/team'
        right:
          $ref: '#/components/schemas/team'
      required:
        - left
        - right
    matchCombination:
      type: object
      properties:
        matches:
          type: array
          items:
            $ref: '#/components/schemas/match'
        rest_players:
          type: array
          items:
            $ref: '#/components/schemas/playerReadModel'
      required:
        - matches
        - restPlayers
    success:
      type: object
      properties:
        message:
          type: string
    failure:
      type: object
      properties:
        message:
          type: string
    token:
      type: object
      properties:
        token:
          type: string
    communityId:
      type: string
    communityName:
      type: string
    communityDescription:
      type: string
    playerId:
      type: string
    playerName:
      type: string
    playerGender:
      type: string
      enum: [male, female, unknown]
    playerAge:
      type: integer
    playerLevel:
      type: string
      enum: [beginner, intermediate, advanced]
    playerNumGames:
      type: integer
    playerStatus:
      type: string
      enum: [attend, break, absence]
    memberId:
      type: string
    role:
      type: string
      enum: [admin, staff, member]
    userId:
      type: string
    userName:
      type: string
    userEmail:
      type: string
    userStatus:
      type: string
      enum: [inactive, active]
    userPassword:
      type: string
    userConfirmPass:
      type: string
    createdAt:
      type: string
    updatedAt:
      type: string
    rule:
      type: string
      enum: [singles, doubles]

paths:
  /auth/temporary-registration:
    post:
      summary: '仮登録'
      tags: ['auth']
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/temporaryRegistration'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
        '400':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /auth/activate-user:
    post:
      summary: '本登録'
      tags: ['auth']
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/activateUser'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '400':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /auth/login:
    post:
      summary: 'ログイン'
      tags: ['auth']
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/login'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/create-community:
    post:
      summary: 'コミュニティの作成'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/createCommunity'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/rename-community:
    put:
      summary: 'コミュニティ名の変更'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/renameCommunity'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/edit-community-description:
    put:
      summary: 'コミュニティの説明文の変更'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/editCommunityDescription'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/delete-community:
    post:
      summary: 'コミュニティの削除'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/deleteCommunity'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'

  /communities/add-player:
    post:
      summary: 'コミュニティにプレイヤーを追加'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/addPlayer'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/remove-player:
    post:
      summary: 'コミュニティからプレイヤーを削除'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/removePlayer'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/change-player-property:
    put:
      summary: 'プレイヤーのプロパティを変更'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/changePlayerProperty'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/reset-player-num-games:
    put:
      summary: 'プレイヤーの試合数をリセット'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/resetPlayerNumGames'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/change-player-num-games:
    put:
      summary: 'プレイヤーの試合数を変更'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/changePlayerNumGames'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/add-member:
    post:
      summary: 'コミュニティにメンバーを追加'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/addMember'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '400':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/remove-member:
    post:
      summary: 'コミュニティからメンバーを削除'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/removeMember'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '400':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/change-member-role:
    put:
      summary: 'メンバーの権限を変更'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/changeMemberRole'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '400':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities:
    get:
      summary: 'コミュニティ一覧の取得'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/communityReadModel'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/{community-id}:
    get:
      summary: 'コミュニティの取得'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/community-id'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/communityReadModel'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/{community-id}/players:
    get:
      summary: 'プレイヤー一覧の取得'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/community-id'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/playerReadModel'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/{community-id}/members:
    get:
      summary: 'メンバー一覧の取得'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/community-id'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/memberReadModel'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /communities/{community-id}/generate-matches:
    get:
      summary: 'マッチの生成'
      tags: ['communities']
      deprecated: false
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/community-id'
        - $ref: '#/components/parameters/num-court'
        - $ref: '#/components/parameters/rule'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/matchCombination'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /users/{user-id}:
    get:
      summary: 'ユーザーの取得'
      tags: ['users']
      deprecated: false
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/user-id'
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userReadModel'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /users/me:
    get:
      summary: '自分のユーザー情報の取得'
      tags: ['users']
      deprecated: false
      security:
        - bearerAuth: []
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userReadModel'
        '404':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
  /users/reissue-confirm-pass:
    post:
      summary: 'パスワード再発行'
      tags: ['users']
      deprecated: false
      responses:
        '200':
          description: '成功'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '400':
          description: '失敗'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure'
